{"version":3,"sources":["App.js","index.js"],"names":["App","useForm","errors","register","handleSubmit","useState","labelValue","setLabelValue","blnShowProgress","setBlnShowProgress","className","onSubmit","data","console","log","axios","get","inputfield","then","res","error","TextField","inputRef","required","pattern","name","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","Button","color","type","CircularProgress","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"uQAuEeA,EA/DH,WAAO,IAAD,EAC2BC,cAAnCC,EADQ,EACRA,OAAQC,EADA,EACAA,SAAUC,EADV,EACUA,aADV,EAEoBC,mBAAS,IAF7B,mBAETC,EAFS,KAEGC,EAFH,OAG8BF,oBAAS,GAHvC,mBAGTG,EAHS,KAGQC,EAHR,KA2BhB,OACE,yBAAKC,UAAU,OACb,uCACA,yGAIA,0BAAMC,SAAUP,GA7BH,SAACQ,GAChBC,QAAQC,IAAIF,GACZL,EAAc,IACdE,GAAmB,GACnBM,IAAMC,IAAI,kBAAoBJ,EAAKK,YAAYC,MAAK,SAACC,GACnDN,QAAQC,IAAI,WAAYK,GACpBA,EAAIP,MACNL,EAAcY,EAAIP,MAEpBH,GAAmB,MAClB,SAACW,GACFP,QAAQC,IAAI,QAASM,GACrBX,GAAmB,UAkBjB,kBAACY,EAAA,EAAD,CACEC,SAAUnB,EAAS,CAAEoB,UAAU,EAAMC,QAAS,sBAC9CC,KAAK,aACLC,GAAG,sBACHC,MAAM,oBACNC,MAAO,CAAEC,OAAQ,GACjBC,YAAY,yBACZC,WAAS,EACTF,OAAO,SACPG,gBAAiB,CACfC,QAAQ,KAGX/B,EAAOe,YACN,mDACF,6BACA,kBAACiB,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,UAA7B,aAGA,6BAhCA5B,EAGI,kBAAC6B,EAAA,EAAD,CAAkBF,MAAM,cAFvB,MAmCP,2BAAI7B,KC7DJgC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,K","file":"static/js/main.eb3c7137.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { Button } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst App = () => {\n  const { errors, register, handleSubmit } = useForm();\n  const [labelValue, setLabelValue] = useState(\"\");\n  const [blnShowProgress, setBlnShowProgress] = useState(false);\n\n  const onSubmit = (data) => {\n    console.log(data);\n    setLabelValue('');\n    setBlnShowProgress(true);\n    axios.get(\"/predict?query=\" + data.inputfield).then((res) => {\n      console.log(\"response\", res);\n      if (res.data) {\n        setLabelValue(res.data);\n      }\n      setBlnShowProgress(false);\n    }, (error) => {\n      console.log('error', error);\n      setBlnShowProgress(false);\n    });\n  };\n\n  const progressBar = () => {\n    if(!blnShowProgress){\n      return null;\n    }\n    return (<CircularProgress color=\"secondary\" />);\n  }\n  return (\n    <div className=\"App\">\n      <h1>NLP App</h1>\n      <p>\n        Enter issue description and app will tell you which group shall resolve\n        it\n      </p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          inputRef={register({ required: true, pattern: /^[A-Za-z0-9\\s]+$/i })}\n          name=\"inputfield\"\n          id=\"standard-full-width\"\n          label=\"Issue Description\"\n          style={{ margin: 8 }}\n          placeholder=\"Enter Description here\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        {errors.inputfield &&\n          \"Input cannot be empty or have special characters\"}\n        <br />\n        <Button color=\"primary\" type=\"submit\">\n          Get Group\n        </Button> \n        <br />\n        {progressBar()}\n      </form>\n\n      <p>{labelValue}</p>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}