{"version":3,"sources":["App.js","index.js"],"names":["App","useForm","errors","register","handleSubmit","useState","labelValue","setLabelValue","blnShowProgress","setBlnShowProgress","algo","setAlgo","className","onSubmit","data","console","log","axios","post","inputfield","then","res","group","error","Select","name","ref","labelId","id","value","onChange","event","target","MenuItem","TextField","inputRef","required","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","Button","color","type","CircularProgress","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yRA+FeA,EArFH,WAAO,IAAD,EAC2BC,cAAnCC,EADQ,EACRA,OAAQC,EADA,EACAA,SAAUC,EADV,EACUA,aADV,EAEoBC,mBAAS,IAF7B,mBAETC,EAFS,KAEGC,EAFH,OAG8BF,oBAAS,GAHvC,mBAGTG,EAHS,KAGQC,EAHR,OAIQJ,mBAAS,eAJjB,mBAITK,EAJS,KAIHC,EAJG,KAiChB,OACE,yBAAKC,UAAU,OACb,uCACA,yGAIA,0BAAMC,SAAUT,GA9BH,SAACU,GAChBC,QAAQC,IAAIF,GACZP,EAAc,IACdE,GAAmB,GACnBM,QAAQC,IAAI,oBAAqBN,GACjCO,IAAMC,KAAK,IAAMR,EAAO,CAAC,MAAUI,EAAKK,aAAaC,MAAK,SAACC,GACzDN,QAAQC,IAAI,WAAYK,GACpBA,EAAIP,MACNP,EAAcc,EAAIP,KAAKQ,OAEzBb,GAAmB,MAClB,SAACc,GACFR,QAAQC,IAAI,QAASO,GACrBd,GAAmB,UAmBnB,kBAACe,EAAA,EAAD,CAAQC,KAAK,OAAOC,IAAKvB,EACrBwB,QAAQ,+BACRC,GAAG,yBACHC,MAAOnB,EACPoB,SAxCa,SAACC,GACpBpB,EAAQoB,EAAMC,OAAOH,SA2Cf,kBAACI,EAAA,EAAD,CAAUJ,MAAM,eACd,yCAEF,kBAACI,EAAA,EAAD,CAAUJ,MAAM,eAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,eAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,gBAAhB,UAEF,kBAACK,EAAA,EAAD,CACEC,SAAUhC,EAAS,CAAEiC,UAAU,IAC/BX,KAAK,aACLG,GAAG,sBACHS,MAAM,oBACNC,MAAO,CAAEC,OAAQ,GACjBC,YAAY,yBACZC,WAAS,EACTF,OAAO,SACPG,gBAAiB,CACfC,QAAQ,KAGXzC,EAAOiB,YACN,wBACF,6BACA,kBAACyB,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,UAA7B,aAGA,6BAhDAtC,EAGI,kBAACuC,EAAA,EAAD,CAAkBF,MAAM,cAFvB,MAmDP,2BAAIvC,KCrFJ0C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACL,kBAAC,EAAD,MACFJ,K","file":"static/js/main.2c6049b0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { Button } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst App = () => {\n  const { errors, register, handleSubmit } = useForm();\n  const [labelValue, setLabelValue] = useState(\"\");\n  const [blnShowProgress, setBlnShowProgress] = useState(false);\n  const [algo, setAlgo] = useState(\"predictFasttext\");\n\n  const handleChange = (event) => {\n    setAlgo(event.target.value);\n  };\n\n  const onSubmit = (data) => {\n    console.log(data);\n    setLabelValue('');\n    setBlnShowProgress(true);\n    console.log('dropdown selected', algo);\n    axios.post(\"/\" + algo , {'query' : data.inputfield}).then((res) => {\n      console.log(\"response\", res);\n      if (res.data) {\n        setLabelValue(res.data.group);\n      }\n      setBlnShowProgress(false);\n    }, (error) => {\n      console.log('error', error);\n      setBlnShowProgress(false);\n    });\n  };\n\n  const progressBar = () => {\n    if(!blnShowProgress){\n      return null;\n    }\n    return (<CircularProgress color=\"secondary\" />);\n  }\n  return (\n    <div className=\"App\">\n      <h1>NLP App</h1>\n      <p>\n        Enter issue description and app will tell you which group shall resolve\n        it\n      </p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n      \n      <Select name=\"algo\" ref={register}\n          labelId=\"demo-customized-select-label\"\n          id=\"demo-customized-select\"\n          value={algo}\n          onChange={handleChange}\n         \n          \n        >\n          <MenuItem value=\"predictFasttext\">\n            <em>FastText</em>\n          </MenuItem>\n          <MenuItem value=\"LSTM\">LSTM</MenuItem>\n          <MenuItem value=\"predictBI_LSTM\">Bi-Directional LSTM</MenuItem>\n          <MenuItem value=\"predictFasttexttop5\">Fasttext top 10 groups</MenuItem>\n        </Select>\n        <TextField\n          inputRef={register({ required: true })} // pattern: /^[A-Za-z0-9\\s]+$/i\n          name=\"inputfield\"\n          id=\"standard-full-width\"\n          label=\"Issue Description\"\n          style={{ margin: 8 }}\n          placeholder=\"Enter Description here\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        {errors.inputfield &&\n          \"Input cannot be empty\"}\n        <br />\n        <Button color=\"primary\" type=\"submit\">\n          Get Group\n        </Button> \n        <br />\n        {progressBar()}\n      </form>\n\n      <p>{labelValue}</p>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <App />,\n  rootElement\n);\n"],"sourceRoot":""}